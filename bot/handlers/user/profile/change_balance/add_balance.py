# main
from create_bot import bot, dp 

from bot.data.db import Database
from bot.data.config import path
from bot.misc.filer import fich 
from bot.keyboards.user.profile_key.profile_key import back_profile_go 
from bot.misc.function_wallet import create_invoice, check_date_proverka
from bot.keyboards.user.profile_key.profile_key import oplata_key

# other
import base64
from aiogram import types 
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

db = Database(path)

class add_balance_state(StatesGroup):

    amount_value = State()

@dp.callback_query_handler(text='add_balance')
async def call_add_balance(call: types.CallbackQuery, state: FSMContext):

    user_id = call.from_user.id 
    message_id = call.message.message_id

    await bot.answer_callback_query(call.id, f"üí∞")
    await bot.edit_message_caption(chat_id=user_id,
                                   message_id=message_id,
                                   caption=fich(f"""
                                    <b>[üí∞] –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
                                                
                                    [‚Ä¢] –°–∏—Å—Ç–µ–º–∞: <i>CryptoBot</i>
                                    [‚Ä¢] –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: <i>0.2$</i>
                                    [‚Ä¢] –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                                                
                                    ‚úçüèª –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—é</b>"""),
                                    reply_markup=back_profile_go())
    await add_balance_state.amount_value.set()


@dp.message_handler(state=add_balance_state.amount_value)
async def message_add_balance(message: types.Message, state: FSMContext):

    user_id = message.from_user.id 
    message_id = message.message_id

    try:
        amount = float(message.text)
    except:
        await state.finish()
        with open('bot/photo/main.jpg', 'rb') as photo:
            await bot.send_photo(chat_id=user_id,
                                    photo=photo,
                                    caption=f"<b>[‚ÑπÔ∏è] –ù–µ –≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥ —Å—É–º–º—ã!\n\n[‚Ä¢] –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!</b>",
                                    reply_markup=back_profile_go())
        return
    
    if amount >= 0.2:
        await state.finish()
        sums = amount + (amount * 0.03)
        invoice = await create_invoice(sums)

        if invoice:

            url = invoice.bot_invoice_url  # –ë–µ—Ä–µ–º —é—Ä–ª –¥–ª—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –∏–∑ –∏–Ω–≤–æ–π–º–∞
            invoice_id = invoice.invoice_id  # –ë–µ—Ä–µ–º —Å–∞–º –∏–Ω–≤–æ–π—Å –∞–π–¥–∏

            with open('bot/photo/main.jpg', 'rb') as photo:
                await bot.send_photo(chat_id=user_id,
                                        photo=photo,
                                        caption=f"<b>[‚úÖ]  –í–∞—à —Å—á–µ—Ç —Å–æ–∑–¥–∞–Ω!\n\n[‚Ä¢] –û–ø–ª–∞—Ç–∏—Ç–µ –µ–≥–æ –∏ –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!</b>",
                                        reply_markup=oplata_key(url))
                
            if await check_date_proverka(invoice_id):
                
                db.plus_balance(amount, user_id)
                with open('bot/photo/main.jpg', 'rb') as photo:
                    await bot.send_photo(chat_id=user_id,
                                        photo=photo,
                                        caption=f"<b>[üí∏] –í–∞—à –±–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω!\n\n[‚Ä¢] –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!</b>",
                                        reply_markup=back_profile_go())

            else:
                with open('bot/photo/main.jpg', 'rb') as photo:
                    await bot.send_photo(chat_id=user_id,
                                        photo=photo,
                                        caption=f"<b>[‚ÑπÔ∏è] –ò—Å—Ç–µ–∫ —Å—Ä–æ–∫ –æ–ø–ª–∞—Ç—ã!\n\n[‚Ä¢] –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!</b>",
                                        reply_markup=back_profile_go())

        else:
            await state.finish()
            with open('bot/photo/main.jpg', 'rb') as photo:
                await bot.send_photo(chat_id=user_id,
                                        photo=photo,
                                        caption=f"<b>[‚ÑπÔ∏è] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!\n\n[‚Ä¢] –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!</b>",
                                        reply_markup=back_profile_go())

    else:
        await state.finish()
        with open('bot/photo/main.jpg', 'rb') as photo:
            await bot.send_photo(chat_id=user_id,
                                    photo=photo,
                                    caption=f"<b>[‚ÑπÔ∏è] –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: <i>0.2$</i>!\n\n[‚Ä¢] –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!</b>",
                                    reply_markup=back_profile_go())