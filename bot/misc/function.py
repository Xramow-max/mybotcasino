from bot.data.db import Database
from aiogram import types 
from bot.data.config import client, path
from create_bot import bot, dp
import base64

db = Database(path)

async def check_referal(start_command, user_id, username):

    """ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ """
    ref_id = str(start_command[7:])
    if ref_id != '':
        if str(ref_id) != str(user_id):
            db.add_user_ref(user_id, ref_id)
            try:
                await bot.send_message(ref_id, f"<b>[üë§] –ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! @{username}</b>")
            except:
                pass
        else:
            db.add_user_ref(user_id)
    else:
        db.add_user_ref(user_id)
    
    return True

async def check_database_user(first_name, username, user_id, start_command):

    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ, –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

    if not db.user_exists(user_id):  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await check_referal(start_command, user_id, username)
        db.add_user(first_name, username, user_id)
        return True

    else: # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        return True
    

async def check_referal_payment(user_id, amount):

    ref_id_user = int(db.get_ref_id(user_id))
    ref_amount = round(float(amount) * 0.05, 1)
    db.plus_ref_balance(ref_amount, ref_id_user)
    try:
        await bot.send_message(ref_id_user, f"<b>üí∞ –í–∞—à —Ä–µ—Ñ.–±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ <code>{ref_amount}$</code></b>")
    except Exception as e:
        print(e)
        pass

def is_admin(user_id):

    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""

    with open('admins.txt', 'r') as file:
        admin_ids = file.read().splitlines()
    return str(user_id) in admin_ids


def startup_sinca():
    print("")


"""  –§—É–Ω–∫—Ü–∏–∏ —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–µ–π CryptoBot"""
    
async def get_balance_kazna():
    try:
        balances = await client.get_balance()

        # –ò—â–µ–º –±–∞–ª–∞–Ω—Å –¥–ª—è –≤–∞–ª—é—Ç—ã USDT
        usdt_balance = next((balance for balance in balances if balance.currency_code == 'USDT'), None)

        if usdt_balance:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å
            return usdt_balance.available
        else:
            return '–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω!'

    except Exception as e:
        print(e)
        return '–ù–µ –Ω–∞–π–¥–µ–Ω —Ç–æ–∫–µ–Ω!'