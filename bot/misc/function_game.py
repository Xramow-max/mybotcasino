# bot
from create_bot import bot, dp 
from bot.data.config import main_id
from bot.misc.filer import fich 
from bot.data.config import main_id

import bot.keyboards.channel_key.start_key_channel as chan

#module 
import asyncio 
import random

""" –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–≥—Ä –≤ –∫–∞–Ω–∞–ª–µ """
""""""""""""""""""""""""""""""""


async def get_user_id(entata):

    """ –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ–º –ª–∏ –º—ã –¥–æ—Å—Ç–∞—Ç—å user_id"""

    try:
        user_id_entata = entata[0].user.id # –ü–æ–ª—É—á–∞–µ–º user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
        return True
    except:
        await bot.send_message(main_id, fich(f"""
        <b>[‚ùå] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞</b>
                                             
        <blockquote>‚ö†Ô∏è –í–∫–ª—é—á–∏—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö!
        üéñ –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º—ã</blockquote>
        """),
        reply_markup=chan.channel_keyboard_stavka())
        return False
    

async def check_abuz_name(name, message):
    
    if '–æ—Ç–ø—Ä–∞–≤–∏–ª(–∞)' in name:
        await bot.delete_message(main_id, message.message_id)
        await bot.send_message(main_id, fich(f"""
        <b>üòî –ú—ã –∑–∞–º–µ—Ç–∏–ª–∏ –ø–æ–ø—ã—Ç–∫—É –∞–±—É–∑–∞ –ø—Ä–æ–µ–∫—Ç–∞!
                                             
        ‚ùóÔ∏è –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!</b>
        """),
        reply_markup=chan.channel_keyboard_stavka())
        return False
    
    else:
        return True 
    

def get_stavka_soo(comment):
    try:
        comment_data = comment[1]
    except:
        comment_data = comment[0]

    st = comment_data.replace('üí¨', '')
    stavka = st.lower()
    return stavka

# –ü–æ–ª—É—á–∞–µ–º —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏
async def get_amount(match):
    
    value_str = match.group(1).replace(',', "").strip()  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É (—Å—É–º–º–∞ –≤ —Å–∫–æ–±–∫–∞—Ö)
    try:
        value_ = float(value_str)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π
        value = round(value_, 2)   # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
        return value
    except ValueError:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ.")
        return None


async def start_main_id_user(name, amount, stavka):

    soo = await bot.send_message(main_id, fich(f"""
    <b>ü§µ‚Äç‚ôÇÔ∏è –°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞</b>
                                         
    <blockquote>üë§ –ò–≥—Ä–æ–∫: <b>{name}</b>
    üí∞ –°—É–º–º–∞: <b>{amount}$</b>
    üöÄ –ò—Å—Ö–æ–¥: <b>{stavka}</b></blockquote>
    """),
    reply_markup=chan.channel_keyboard_stavka())
    return soo 


async def handle_invalid_bet(stavka, value, soo):

    """ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –≤–≤–µ–ª —Å—Ç–∞–≤–∫—É —é–∑–µ—Ä"""

    if stavka not in ['–ø1', '–ø2', '–º1', '–º2',
                      '–ø–æ–±–µ–¥–∞1', '–ø–æ–±–µ–¥–∞2', '–º–µ–Ω—å—à–µ1', '–º–µ–Ω—å—à–µ2',
                      '—á–µ—Ç', '–Ω–µ—á–µ—Ç',
                      '—á—ë—Ç', '–Ω–µ—á—ë—Ç',
                      '—Å–µ–∫—Ç–æ—Ä1', '—Å–µ–∫—Ç–æ—Ä2', '—Å–µ–∫—Ç–æ—Ä3',
                      '—Å–µ–∫—Ç–æ—Ä 1', '—Å–µ–∫—Ç–æ—Ä 2', '—Å–µ–∫—Ç–æ—Ä 3',
                      '–ø–ª', '–ø–ª–∏–Ω–∫–æ', 'plinko',
                      '–±–∞—Å–∫–µ—Ç –≥–æ–ª', '–±–∞—Å–∫–µ—Ç –ø–æ–ø–∞–ª', '–≥–æ–ª', '–ø–æ–ø–∞–ª',
                        '–±–∞—Å–∫–µ—Ç –ø—Ä–æ–º–∞—Ö', '–±–∞—Å–∫–µ—Ç –º–∏–º–æ',
                        '–±–æ—É–ª –¥—É—ç–ª—å', '–±–æ—É–ª–∏–Ω–≥ –¥—É—ç–ª—å',
                  '–ë–æ—É–ª –¥—É—ç–ª—å', '–ë–æ—É–ª–∏–Ω–≥ –¥—É—ç–ª—å']:
        
        values = value - (value * 0.1)
        await bot.delete_message(main_id, soo.message_id)
        await bot.send_message(main_id, fich(f"""
        <b>‚ùå –ë–æ—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª —Å—Ç–∞–≤–∫—É!
                                             
        ‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ç–∞–≤–∫–∏
        –í—ã –ø–æ–ª—É—á–∏—Ç–µ: {values}$</b>                                             
        """),
        reply_markup=chan.channel_keyboard_stavka())
        return False
    
    else:
        return True 
    


lock = asyncio.Lock()

from bot.handlers.channel_game.kybik.start_kybik_game import start_game_kybik
from bot.handlers.channel_game.plinko.start_plinko_game import start_game_plinko
from bot.handlers.channel_game.basket.start_basket_game import start_game_basket
from bot.handlers.channel_game.boul.start_boul_game import start_game_boul

async def await_check_stavka_game(value, soo, user_id, stavka):

    async with lock:
        if stavka in ['–ø1', '–ø2',
                      '–ø–æ–±–µ–¥–∞1', '–ø–æ–±–µ–¥–∞2',
                      '—á–µ—Ç', '–Ω–µ—á–µ—Ç',
                      '—á—ë—Ç', '–Ω–µ—á—ë—Ç',
                      '—Å–µ–∫—Ç–æ—Ä1', '—Å–µ–∫—Ç–æ—Ä2', '—Å–µ–∫—Ç–æ—Ä3',
                      '—Å–µ–∫—Ç–æ—Ä 1', '—Å–µ–∫—Ç–æ—Ä 2', '—Å–µ–∫—Ç–æ—Ä 3']:
            await start_game_kybik(stavka, value, user_id, soo)
        elif stavka in ['–ø–ª', '–ø–ª–∏–Ω–∫–æ', 'plinko']:
            await start_game_plinko(stavka, value, user_id, soo)
        elif stavka in ['–±–∞—Å–∫–µ—Ç –≥–æ–ª', '–±–∞—Å–∫–µ—Ç –ø–æ–ø–∞–ª', '–≥–æ–ª', '–ø–æ–ø–∞–ª',
                        '–±–∞—Å–∫–µ—Ç –ø—Ä–æ–º–∞—Ö', '–±–∞—Å–∫–µ—Ç –º–∏–º–æ']:
            await start_game_basket(stavka, value, user_id, soo)
        elif stavka in ['–±–æ—É–ª –¥—É—ç–ª—å', '–±–æ—É–ª–∏–Ω–≥ –¥—É—ç–ª—å',
                  '–ë–æ—É–ª –¥—É—ç–ª—å', '–ë–æ—É–ª–∏–Ω–≥ –¥—É—ç–ª—å']:
            await start_game_boul(stavka, value, user_id, soo)
            
